{"ast":null,"code":"var _jsxFileName = \"/home/alinux/Development/winko/Winko-finance/blockchain-implementations/version-1/src/components/Wallet.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Interactions from '../interactions/interactions';\nimport winkoTokenAbi from '../contract/winkoTokenABI.json';\nimport { RiSettings3Fill } from 'react-icons/ri';\nimport { AiOutlineDown } from 'react-icons/ai';\nimport ethLogo from '../assets/eth.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  wrapper: `w-screen flex items-center justify-center mt-14`,\n  content: `bg-[#191B1F] w-[40rem] rounded-2xl p-4`,\n  formHeader: `px-2 flex items-center justify-between font-semibold text-xl`,\n  transferPropContainer: `bg-[#20242A] my-3 rounded-2xl p-6 text-3xl  border border-[#20242A] hover:border-[#41444F]  flex justify-between`,\n  transferPropInput: `bg-transparent placeholder:text-[#B2B9D2] outline-none mb-6 w-full text-2xl`,\n  currencySelector: `flex w-1/4`,\n  currencySelectorContent: `w-full h-min flex justify-between items-center bg-[#2D2F36] hover:bg-[#41444F] rounded-2xl text-xl font-medium cursor-pointer p-2 mt-[-0.2rem]`,\n  currencySelectorIcon: `flex items-center`,\n  currencySelectorTicker: `mx-2`,\n  currencySelectorArrow: `text-lg`,\n  confirmButton: `bg-[#2172E5] my-2 rounded-2xl py-6 px-8 text-xl font-semibold flex items-center justify-center cursor-pointer border border-[#2172E5] hover:border-[#234169]`\n};\nexport default function Wallet() {\n  _s();\n\n  // gene cahe chain address\n  const contractAddress = \"0x329BEEeD3277d359857b710244719055bA5b0455\";\n  const [tokenName, setTokenName] = useState(\"Token\");\n  const [connectButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [errorMessage, setErrorMsg] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText(\"wallet Connected\");\n      }).catch(error => {\n        setErrorMsg();\n      });\n    } else {\n      console.log(\"need to install metamask\");\n      errorMessage(\"Please Install Metamask\");\n    }\n  };\n\n  const accountChangedHandler = newAddress => {\n    setDefaultAccount(newAddress);\n    updateEthers();\n  };\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    let tempSigner = tempProvider.getSigner();\n    let tempContract = new ethers.Contract(contractAddress, winkoTokenAbi, tempSigner);\n    setProvider(tempProvider);\n    setSigner(tempSigner);\n    setContract(tempContract);\n  };\n\n  useEffect(() => {\n    if (contract != null) {\n      updateBalance();\n      updateTokenName();\n    }\n  }, [contract]);\n\n  const updateBalance = async () => {\n    let balanceBig = await contract.balanceOf(defaultAccount);\n    let balanceNumber = balanceBig.toNumber();\n    let decimals = await contract.decimals();\n    let tokenBalance = balanceNumber / Math.pow(10, decimals);\n    setBalance(tokenBalance);\n  };\n\n  const updateTokenName = async () => {\n    setTokenName(await contract.name());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: tokenName + \"Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: connectButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [tokenName, \" Balance: \", balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Interactions, {\n      contract: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wallet, \"LksSxUGgwDNkyUmbPa6DRfN2xNQ=\");\n\n_c = Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Interactions","winkoTokenAbi","RiSettings3Fill","AiOutlineDown","ethLogo","style","wrapper","content","formHeader","transferPropContainer","transferPropInput","currencySelector","currencySelectorContent","currencySelectorIcon","currencySelectorTicker","currencySelectorArrow","confirmButton","Wallet","contractAddress","tokenName","setTokenName","connectButtonText","setConnButtonText","errorMessage","setErrorMsg","defaultAccount","setDefaultAccount","balance","setBalance","provider","setProvider","signer","setSigner","contract","setContract","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","console","log","newAddress","updateEthers","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","updateBalance","updateTokenName","balanceBig","balanceOf","balanceNumber","toNumber","decimals","tokenBalance","Math","pow","name"],"sources":["/home/alinux/Development/winko/Winko-finance/blockchain-implementations/version-1/src/components/Wallet.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {ethers} from 'ethers'\nimport Interactions from '../interactions/interactions'\nimport winkoTokenAbi from '../contract/winkoTokenABI.json'\nimport { RiSettings3Fill } from 'react-icons/ri'\nimport { AiOutlineDown } from 'react-icons/ai'\nimport ethLogo from '../assets/eth.png'\n\nconst style = {\n  wrapper: `w-screen flex items-center justify-center mt-14`,\n  content: `bg-[#191B1F] w-[40rem] rounded-2xl p-4`,\n  formHeader: `px-2 flex items-center justify-between font-semibold text-xl`,\n  transferPropContainer: `bg-[#20242A] my-3 rounded-2xl p-6 text-3xl  border border-[#20242A] hover:border-[#41444F]  flex justify-between`,\n  transferPropInput: `bg-transparent placeholder:text-[#B2B9D2] outline-none mb-6 w-full text-2xl`,\n  currencySelector: `flex w-1/4`,\n  currencySelectorContent: `w-full h-min flex justify-between items-center bg-[#2D2F36] hover:bg-[#41444F] rounded-2xl text-xl font-medium cursor-pointer p-2 mt-[-0.2rem]`,\n  currencySelectorIcon: `flex items-center`,\n  currencySelectorTicker: `mx-2`,\n  currencySelectorArrow: `text-lg`,\n  confirmButton: `bg-[#2172E5] my-2 rounded-2xl py-6 px-8 text-xl font-semibold flex items-center justify-center cursor-pointer border border-[#2172E5] hover:border-[#234169]`,\n}\n\nexport default function Wallet() {\n   // gene cahe chain address\n    const contractAddress = \"0x329BEEeD3277d359857b710244719055bA5b0455\"; \n\n    const [tokenName, setTokenName] = useState(\"Token\");\n    const [connectButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n    const [errorMessage, setErrorMsg] = useState(null);\n    const [defaultAccount, setDefaultAccount] = useState(null);\n    const [balance, setBalance] = useState(null);\n\n    const [provider, setProvider]  = useState(null); \n    const [signer, setSigner] = useState(null); \n    const [contract, setContract] = useState(null);\n\n    const connectWalletHandler = () => {\n        if(window.ethereum && window.ethereum.isMetaMask){\n            window.ethereum.request({method: 'eth_requestAccounts'})\n            .then(result =>{\n              accountChangedHandler(result[0]); \n              setConnButtonText(\"wallet Connected\");\n\n            })\n            .catch(error => {\n              setErrorMsg()\n            })\n        }\n        else{\n          console.log(\"need to install metamask\");\n          errorMessage(\"Please Install Metamask\");\n        }\n    }\n\n    const accountChangedHandler = (newAddress) => {\n      setDefaultAccount(newAddress); \n      updateEthers();\n    }\n    \n    const updateEthers = () => {\n      let tempProvider = new ethers.providers.Web3Provider(window.ethereum); \n\n      let tempSigner = tempProvider.getSigner(); \n\n      let tempContract = new ethers.Contract(contractAddress, winkoTokenAbi, tempSigner)\n\n      setProvider(tempProvider)\n      setSigner(tempSigner)\n      setContract(tempContract)\n    }\n\n    useEffect(() => {\n      if(contract != null){\n        updateBalance(); \n        updateTokenName(); \n      }\n    }, [contract])\n\n    const updateBalance = async () =>{\n      let balanceBig = await contract.balanceOf(defaultAccount);\n      let balanceNumber = balanceBig.toNumber(); \n\n      let decimals = await contract.decimals(); \n\n      let tokenBalance = balanceNumber/Math.pow(10,decimals);\n\n      setBalance(tokenBalance);\n    }\n\n    const updateTokenName = async () => {\n      setTokenName(await contract.name()); \n\n    }\n    \n\n  return (\n\n    <div className={style.wrapper}>\n      <div className={style.content}></div>\n        <h2>{tokenName + \"Wallet\"}</h2>\n        <button onClick={connectWalletHandler}>{connectButtonText}</button>\n\n        <div >\n            <div>\n              <h3>Address: {defaultAccount}</h3>\n            </div>\n            <div>\n              <h3>{tokenName} Balance: {balance}</h3>\n            </div>\n            {errorMessage}\n        </div>\n        <Interactions contract={contract}></Interactions>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,KAAK,GAAG;EACZC,OAAO,EAAG,iDADE;EAEZC,OAAO,EAAG,wCAFE;EAGZC,UAAU,EAAG,8DAHD;EAIZC,qBAAqB,EAAG,kHAJZ;EAKZC,iBAAiB,EAAG,6EALR;EAMZC,gBAAgB,EAAG,YANP;EAOZC,uBAAuB,EAAG,gJAPd;EAQZC,oBAAoB,EAAG,mBARX;EASZC,sBAAsB,EAAG,MATb;EAUZC,qBAAqB,EAAG,SAVZ;EAWZC,aAAa,EAAG;AAXJ,CAAd;AAcA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAC9B;EACC,MAAMC,eAAe,GAAG,4CAAxB;EAEA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,OAAD,CAA1C;EACA,MAAM,CAACwB,iBAAD,EAAoBC,iBAApB,IAAyCzB,QAAQ,CAAC,gBAAD,CAAvD;EACA,MAAM,CAAC0B,YAAD,EAAeC,WAAf,IAA8B3B,QAAQ,CAAC,IAAD,CAA5C;EACA,MAAM,CAAC4B,cAAD,EAAiBC,iBAAjB,IAAsC7B,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,IAAD,CAAtC;EAEA,MAAM,CAACgC,QAAD,EAAWC,WAAX,IAA2BjC,QAAQ,CAAC,IAAD,CAAzC;EACA,MAAM,CAACkC,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACoC,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,CAAC,IAAD,CAAxC;;EAEA,MAAMsC,oBAAoB,GAAG,MAAM;IAC/B,IAAGC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,UAAtC,EAAiD;MAC7CF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;QAACC,MAAM,EAAE;MAAT,CAAxB,EACCC,IADD,CACMC,MAAM,IAAG;QACbC,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB;QACApB,iBAAiB,CAAC,kBAAD,CAAjB;MAED,CALD,EAMCsB,KAND,CAMOC,KAAK,IAAI;QACdrB,WAAW;MACZ,CARD;IASH,CAVD,MAWI;MACFsB,OAAO,CAACC,GAAR,CAAY,0BAAZ;MACAxB,YAAY,CAAC,yBAAD,CAAZ;IACD;EACJ,CAhBD;;EAkBA,MAAMoB,qBAAqB,GAAIK,UAAD,IAAgB;IAC5CtB,iBAAiB,CAACsB,UAAD,CAAjB;IACAC,YAAY;EACb,CAHD;;EAKA,MAAMA,YAAY,GAAG,MAAM;IACzB,IAAIC,YAAY,GAAG,IAAInD,MAAM,CAACoD,SAAP,CAAiBC,YAArB,CAAkChB,MAAM,CAACC,QAAzC,CAAnB;IAEA,IAAIgB,UAAU,GAAGH,YAAY,CAACI,SAAb,EAAjB;IAEA,IAAIC,YAAY,GAAG,IAAIxD,MAAM,CAACyD,QAAX,CAAoBtC,eAApB,EAAqCjB,aAArC,EAAoDoD,UAApD,CAAnB;IAEAvB,WAAW,CAACoB,YAAD,CAAX;IACAlB,SAAS,CAACqB,UAAD,CAAT;IACAnB,WAAW,CAACqB,YAAD,CAAX;EACD,CAVD;;EAYAzD,SAAS,CAAC,MAAM;IACd,IAAGmC,QAAQ,IAAI,IAAf,EAAoB;MAClBwB,aAAa;MACbC,eAAe;IAChB;EACF,CALQ,EAKN,CAACzB,QAAD,CALM,CAAT;;EAOA,MAAMwB,aAAa,GAAG,YAAW;IAC/B,IAAIE,UAAU,GAAG,MAAM1B,QAAQ,CAAC2B,SAAT,CAAmBnC,cAAnB,CAAvB;IACA,IAAIoC,aAAa,GAAGF,UAAU,CAACG,QAAX,EAApB;IAEA,IAAIC,QAAQ,GAAG,MAAM9B,QAAQ,CAAC8B,QAAT,EAArB;IAEA,IAAIC,YAAY,GAAGH,aAAa,GAACI,IAAI,CAACC,GAAL,CAAS,EAAT,EAAYH,QAAZ,CAAjC;IAEAnC,UAAU,CAACoC,YAAD,CAAV;EACD,CATD;;EAWA,MAAMN,eAAe,GAAG,YAAY;IAClCtC,YAAY,CAAC,MAAMa,QAAQ,CAACkC,IAAT,EAAP,CAAZ;EAED,CAHD;;EAMF,oBAEE;IAAK,SAAS,EAAE9D,KAAK,CAACC,OAAtB;IAAA,wBACE;MAAK,SAAS,EAAED,KAAK,CAACE;IAAtB;MAAA;MAAA;MAAA;IAAA,QADF,eAEI;MAAA,UAAKY,SAAS,GAAG;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAEgB,oBAAjB;MAAA,UAAwCd;IAAxC;MAAA;MAAA;MAAA;IAAA,QAHJ,eAKI;MAAA,wBACI;QAAA,uBACE;UAAA,wBAAcI,cAAd;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAA,uBACE;UAAA,WAAKN,SAAL,gBAA0BQ,OAA1B;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAJJ,EAOKJ,YAPL;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAcI,QAAC,YAAD;MAAc,QAAQ,EAAEU;IAAxB;MAAA;MAAA;MAAA;IAAA,QAdJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAmBD;;GA5FuBhB,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}